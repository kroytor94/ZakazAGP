// –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
const mobileMenuButton = document.querySelector('.mobile-menu-button');
const mobileMenu = document.createElement('div');
mobileMenu.className = 'mobile-menu';
mobileMenu.innerHTML = `
    <div class="mobile-menu-content">
        <button class="mobile-close-button">
            <i class="fas fa-times"></i>
        </button>
        <nav class="mobile-nav">
            <a href="#services">–£—Å–ª—É–≥–∏</a>
            <a href="#advantages">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</a>
            <a href="#equipment">–¢–µ—Ö–Ω–∏–∫–∞</a>
            <a href="tel:+79190213818" class="mobile-cta-button">
                <i class="fas fa-phone"></i> –ü–æ–∑–≤–æ–Ω–∏—Ç—å
            </a>
            <a href="#contact" class="mobile-cta-button">–ó–∞–∫–∞–∑–∞—Ç—å</a>
        </nav>
    </div>
`;

document.body.appendChild(mobileMenu);

mobileMenuButton.addEventListener('click', () => {
    mobileMenu.classList.add('active');
    document.body.style.overflow = 'hidden';
});

document.addEventListener('click', (e) => {
    if (e.target.closest('.mobile-close-button') || 
        (e.target.closest('.mobile-menu') && !e.target.closest('.mobile-menu-content'))) {
        mobileMenu.classList.remove('active');
        document.body.style.overflow = '';
    }
});

// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
        if (this.getAttribute('href') === '#') return;
        
        e.preventDefault();
        
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        
        if (targetElement) {
            window.scrollTo({
                top: targetElement.offsetTop - 80,
                behavior: 'smooth'
            });
        }
        
        mobileMenu.classList.remove('active');
        document.body.style.overflow = '';
    });
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
const phoneInput = document.querySelector('input[type="tel"]');
if (phoneInput) {
    phoneInput.addEventListener('input', function() {
        this.value = this.value.replace(/[^0-9+]/g, '');
    });
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –≤ Telegram
const orderForm = document.getElementById('fastOrderForm');
if (orderForm) {
    orderForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const submitButton = this.querySelector('button[type="submit"]');
        submitButton.disabled = true;
        submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...';
        
        try {
            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());
            
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const formattedDate = new Date(data.date).toLocaleDateString('ru-RU', {
                day: 'numeric',
                month: 'long',
                year: 'numeric',
                weekday: 'short'
            });

            const message = `üìÖ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞–≤—Ç–æ–≤—ã—à–∫—É:

üë§ –ò–º—è: ${data.name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
üìÖ –î–∞—Ç–∞: ${formattedDate}
üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${data.message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

‚è± ${new Date().toLocaleString()}`;

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
            const telegramResponse = await fetch(`https://api.telegram.org/bot7204468027:AAHQgq3seLFjPyzyQQJ3NoCogfxSL-e4EjU/sendMessage?chat_id=285897275&text=${encodeURIComponent(message)}`);
            
            if (telegramResponse.ok) {
                showSuccessMessage();
                this.reset();
            } else {
                throw new Error('–û—à–∏–±–∫–∞ Telegram API');
            }
        } catch (error) {
            alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é: +7 (919) 021-38-18');
            console.error('–û—à–∏–±–∫–∞:', error);
        } finally {
            submitButton.disabled = false;
            submitButton.innerHTML = '<i class="fas fa-paper-plane"></i> –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É';
        }
    });
}

// –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
function showSuccessMessage() {
    const popup = document.getElementById('formSuccess');
    if (!popup) return;
    
    popup.style.display = 'block';
    
    setTimeout(() => {
        popup.style.animation = 'fadeIn 0.3s reverse';
        setTimeout(() => {
            popup.style.display = 'none';
            popup.style.animation = 'fadeIn 0.3s';
        }, 300);
    }, 3000);
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
const animateOnScroll = () => {
    const elements = document.querySelectorAll('.service-card, .advantage-card, .spec-item, .contact-item');
    
    elements.forEach(el => {
        const elPosition = el.getBoundingClientRect().top;
        const screenPosition = window.innerHeight / 1.2;
        
        if(elPosition < screenPosition) {
            el.style.opacity = '1';
            el.style.transform = 'translateY(0)';
        }
    });
};

// –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
document.querySelectorAll('.service-card, .advantage-card, .spec-item, .contact-item').forEach(el => {
    el.style.opacity = '0';
    el.style.transform = 'translateY(20px)';
    el.style.transition = 'all 0.5s ease-out';
});

window.addEventListener('scroll', animateOnScroll);
animateOnScroll();

// –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∞–ø–∫–∞
const header = document.querySelector('.modern-header');
if (header) {
    window.addEventListener('scroll', function() {
        if (window.scrollY > 50) {
            header.style.boxShadow = '0 2px 20px rgba(0,0,0,0.1)';
        } else {
            header.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';
        }
    });
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–µ
const dateInput = document.getElementById('date');
if (dateInput) {
    dateInput.min = new Date().toISOString().split('T')[0];
    
    let maxDate = new Date();
    maxDate.setMonth(maxDate.getMonth() + 3);
    dateInput.max = maxDate.toISOString().split('T')[0];
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–ª–∞–≤–∞—é—â–µ–π –∫–Ω–æ–ø–∫–∏
const floatingOrderBtn = document.getElementById('floatingOrderBtn');
if (floatingOrderBtn) {
    floatingOrderBtn.addEventListener('click', function() {
        // –ü–ª–∞–≤–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ñ–æ—Ä–º–µ –∑–∞–∫–∞–∑–∞
        const contactSection = document.getElementById('contact');
        if (contactSection) {
            window.scrollTo({
                top: contactSection.offsetTop - 80,
                behavior: 'smooth'
            });
        }
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    let lastScrollPosition = 0;
    window.addEventListener('scroll', function() {
        const currentScrollPosition = window.pageYOffset;
        
        if (currentScrollPosition > lastScrollPosition) {
            // –°–∫—Ä–æ–ª–ª–∏–º –≤–Ω–∏–∑ - —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            floatingOrderBtn.style.transform = 'translateY(100px)';
        } else {
            // –°–∫—Ä–æ–ª–ª–∏–º –≤–≤–µ—Ä—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            floatingOrderBtn.style.transform = 'translateY(0)';
        }
        
        lastScrollPosition = currentScrollPosition;
        
        // –í–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 100) {
            floatingOrderBtn.style.transform = 'translateY(0)';
        }
    });
}
